apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    app: {{ include "common.names.fullname" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  annotations:
    checksum/client-config: {{ tpl (.Files.Get "files/configs/client.txt") . | sha256sum }}
    checksum/server-config: {{ tpl (.Files.Get "files/configs/server.txt") . | sha256sum }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.names.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.names.fullname" . }}
    spec: {{ $serverConfigName := "server-config.txt" }}
      {{ $clientConfigName := "client-config.txt" }}
      {{ $serverConfigPath := printf "/etc/yc/disk-manager/%s" $serverConfigName}}
      {{ $clientConfigPath := printf "/etc/yc/disk-manager/%s" $clientConfigName}}
      volumes:
      - name: disk-manager-config
        configMap:
          name: {{ include "common.names.configname" . }}
      initContainers:
      - name: disk-manager-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command: ["/usr/bin/yc-disk-manager-init-db", "--config={{ $serverConfigPath }}"]
        volumeMounts:
        - name: disk-manager-config
          mountPath: "{{ $serverConfigPath }}"
          subPath: server.txt

      containers:
      - name: disk-manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/usr/bin/yc-disk-manager", "--config={{ $serverConfigPath }}"]
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        volumeMounts:
        - name: disk-manager-config
          mountPath: "{{ $serverConfigPath }}"
          subPath: "{{ $serverConfigName }}"
        {{- if eq .Values.serviceKind "controlplane" }}
        - name: disk-manager-config
          mountPath: "{{ $clientConfigPath }}"
          subPath: "client.txt"
        {{- end }}
        ports:
          - containerPort: {{ .Values.service.internalPort | int }}